@model GridMvc.Pagination.GridPager
@if (Model == null || Model.PageCount <= 1)
{
    return;
}
<input type="hidden" id="currentpage" name="currentpage" value="@Model.CurrentPage"/>
<div class="grid-pager">
    <table style="width:100%;">
        <tr>
            <td>
                <div class="text-xs-center m-2">
                    <ul class="pagination">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item preview @(Model.CurrentPage>1 ? "" : "hidde")" data-page-cible="@(Model.CurrentPage - 1)">
                                <a class="page-link" href="#" aria-label="Previous" onclick="getToPage(this, @(Model.CurrentPage - 1));return false;">
                                    <span aria-hidden="true">&laquo;</span>
                                    <span class="sr-only"> @Resource.paginatorPrev</span>
                                </a>
                            </li>
                        }

                        @if (Model.StartDisplayedPage > 1)
                        {
                            <li data-page-cible="1" class="page-item">
                                <a class="page-link" href="#" onclick="getToPage(this, 1);return false;">1</a>
                            </li>
                            if (Model.StartDisplayedPage > 2)
                            {
                                <li class="page-item" data-page-cible="@(Model.StartDisplayedPage - 1)">
                                    <a class="page-link" href="#" class="page-link" onclick="getToPage(this, @(Model.StartDisplayedPage - 1));return false;">...</a>
                                </li>
                            }
                        }
                        @for (int i = Model.StartDisplayedPage; i <= Model.EndDisplayedPage; i++)
                        {
                            if (i == Model.CurrentPage)
                            {
                                <li class="page-item active" data-page-cible="@i">
                                    <a class="page-link" href="#" class="page-link" onclick="getToPage(this, @i);return false;">@i</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item" data-page-cible="@i">
                                    <a class="page-link" href="#" class="page-link" onclick="getToPage(this, @i);return false;">@i</a>
                                </li>
                            }
                        }
                        @if (Model.EndDisplayedPage < Model.PageCount)
                        {
                            if (Model.EndDisplayedPage < Model.PageCount - 1)
                            {
                                <li class="page-item" data-page-cible="@(Model.EndDisplayedPage + 1)">
                                    <a class="page-link" href="#" onclick="getToPage(this, @(Model.EndDisplayedPage + 1));return false;">...</a>
                                </li>
                            }
                            <li class="page-item" data-page-cible="@Model.PageCount">
                                <a class="page-link" href="#" onclick="getToPage(this, @Model.PageCount);return false;">@Model.PageCount</a>
                            </li>
                        }
                        @if (Model.CurrentPage < Model.PageCount)
                        {
                            <li class="page-item next" data-page-cible="@(Model.CurrentPage + 1)">
                                <a class="page-link" href="#" onclick="getToPage(this, @(Model.CurrentPage + 1));return false;">»</a>
                            </li>
                        }
                    </ul>
                </div>
            </td>
            <!--<td align="right">
                @*Html.DropDownListFor(x => x.PageSize, new SelectList(Model.PageSizes.Select(s => new SelectListItem() { Value = s.ToString(), Text = s.ToString() }), "Value", "Text"), new { @onchange = "changePageSize(this, this.value);" })*@
            </td>-->
        </tr>
    </table>
</div>