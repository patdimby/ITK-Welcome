@using GridMvc.Html;
@using Intitek.Welcome.UI.ViewModels.Admin
@using Intitek.Welcome.UI.Web.Admin.Models
@using Intitek.Welcome.Infrastructure.Helpers;
@model Intitek.Welcome.UI.ViewModels.Admin.ProfilResponseViewModel
@helper ProgressBar(int value, int total)
{
                    /**/
    <div class="progress">
        <div class="progress-bar @Html.ProgressBarClass(value, total, false)" role="progressbar" aria-valuenow="@value" aria-valuemin="0" aria-valuemax="100" style="width: @Html.ProgressBarWidth(value, total);">
            <span class="value">@value / @total</span>
        </div>
    </div>
}
@helper RenderNameWithTooltip(DocumentViewModel vm)
{
                    /**/
    <span data-toggle="tooltip" title="@vm.Name" class="@(vm.IsDefaultLangName ? "defaultName": string.Empty)">@vm.Name</span>
}
@helper GridDocument(GridBO<DocumentViewModel> vms)
{
                    /**/
    @Html.Grid(vms, "_GridDocument").Columns(columns =>
{
    columns.Add(o => o.ID_Category).RenderValueAs(o => "").Css("subcategory")
   .SetWidth(150).Filterable(false).Sortable(false);

    columns.Add(o => o.ID_SubCategory).RenderValueAs(o => "").Css("subcategory")
   .SetWidth(150).Filterable(false).Sortable(false);

    columns.Add(o => o.Name)
     .RenderValueAs(o => RenderNameWithTooltip(o))
    .Css("docname").IsHtml(true).SetColspan(3)
        .Filterable(false).Sortable(false);

    columns.Add(o => o.Version).Css("center")
    .SetWidth(120).Filterable(false).Sortable(false);


    columns.Add(o => o.UserRead).Titled(Resource.prf_Reading).RenderValueAs(o => ProgressBar(o.Statistiques.NotRead, o.Statistiques.ToRead)).IsHtml(true).Filterable(false).Sortable(false).Css("center");
    columns.Add(o => o.UserApproved).Titled(Resource.prf_Approbation).RenderValueAs(o => ProgressBar(o.Statistiques.NotApproved, o.Statistiques.ToApproved)).IsHtml(true).Filterable(false).Sortable(false).Css("center");
    columns.Add(o => o.UserTested).Titled(Resource.prf_Test).RenderValueAs(o => ProgressBar(o.Statistiques.NotTested, o.Statistiques.ToTested)).IsHtml(true).Filterable(false).Sortable(false).Css("center");
    columns.Add(o => o.Commentaire).Filterable(false).Sortable(false);
}).WithGridItemsCount(Resource.labelNbEnreg).SetRowCssClasses(e => true ? "clickable" : string.Empty);
}
<div class="modal fade" id="readFocusDial" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg" role="document">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Resource.DocumentState</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="accordion-regular">
                    <div class="card card-form mb-2">
                        <p> @Resource.EntityDoc&nbsp;<span class="label label-warning">@Model.Profile.Name</span></p>
                        @if (Model.ListDocument.ItemsCount == 0)
                        {
                            <div class="alert alert-danger" role="alert">Aucun document!</div>
                        }
                        else
                        {

                            <div id="parent_stGrid">
                                @GridDocument(Model.ListDocument)
                            </div>
                        }

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">@Resource.btnClose</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
