@using Intitek.Welcome.UI.ViewModels.Admin
@model Intitek.Welcome.UI.ViewModels.Admin.ProfilResponseViewModel
@{
    ViewBag.Title = Model.Profile.ID > 0 ? string.Format("Administration | {0}", HttpUtility.HtmlDecode(Model.Profile.Name)) : string.Format("Administration | {0}", Resource.newProfile);
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@section Styles
{
    @Styles.Render("~/Content/gridmvc")
    @Styles.Render("~/Content/documents")
}

<div class="row page-breadcrumb">
    <div class="col">
        <nav aria-label="breadcrumb" class="pt-2">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")" class="breadcrumb-link" onclick="openLoading();">@Resource.menuHome</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Profil")" class="breadcrumb-link" onclick="openLoading();">@Resource.profilLists</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@(Model.Profile.ID > 0 ? Model.Profile.Name : Resource.newProfile)</li>
            </ol>
        </nav>
    </div>
    <div class="row m-r-0 m-l-0 p-r-15 p-l-0 align-items-center">
        <div class="pageheader-title">
            <span>@(Model.Profile.ID > 0 ? Model.Profile.Name : Resource.newProfile)</span>
        </div>
        <div class="pt-2">
            <a data-i18n-title="menu.go-back" href="#" onclick="goBack()"
               class="btn action-icon btn-ariane-back btn-xs"><i class="fas fa-arrow-left"></i></a>
        </div>
    </div>
</div>
<!-- ============================================================== -->
<!-- End Ariane  -->
<!-- ============================================================== -->
<div class="card-body p-l-0 p-r-0 p-t-0">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 p-l-0 p-r-0">
        <div class="accordion-regular">
            <div class="card card-form mb-2">
                <div>
                    <h2 class="center">@(Model.Profile.ID > 0 ? string.Format("Edition {0}", HttpUtility.HtmlDecode(Model.Profile.Name)) : Resource.newProfile)</h2>
                </div>
                <div class="card card-form p-0">
                    <form id="ajaxDocumentForm" name="ajaxDocumentForm">
                        <input type="hidden" id="ProfilID" name="ProfilID" value="@Model.Profile.ID" />
                    </form>
                    <form id="newProfilForm" action="@Url.Action("Edit", "Profil")" method="post">
                        <input type="hidden" id="Id" name="Id" value="@Model.Profile.ID" />
                        <div class="card-body show">
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group row item_vertical">
                                        <label class="col-3 col-form-label label-align-right">@Resource.name</label>
                                        <div class="col-9">
                                            @Html.TextBox("Name", @Model.Profile.Name, new { @class = "form-control form-control-required", @placeholder = Resource.prf_Name, @maxlength = 255 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card card-form p-0">
                                <div class="card-header card-header-form row">
                                    <h5 class="mb-0">
                                        <button class="btn btn-link btn-link-collapse" data-toggle="collapse"
                                                data-target="#collapseStep1" aria-expanded="true" aria-controls="collapseSeven">
                                            <span class="fas fa-arrow-down"></span>
                                        </button>
                                        <div class="accordion-subtitle row">
                                            <div>@Resource.documents</div>&nbsp;<div class="number-items" id="total-docGrid">@Model.ListDocument.ItemsCount</div>
                                        </div>
                                    </h5>
                                </div>
                                <div id="collapseStep1" class="card-body show" aria-labelledby="Step">
                                    <div id="parent_docGrid">
                                        @Html.Partial("_DocumentGrid", @Model.ListDocument)
                                    </div><br />
                                    <div class="row mb-3">
                                        <div class="col center p-t-25">
                                            <button type="button" class="btn btn-wme btn-dark space-betwen-btn"
                                                    onclick="_redirectTo('@Url.Action("Index", "Profil")')">
                                                @Resource.buttonCancel
                                            </button>

                                            <button type="submit"
                                                    class="btn btn-wme btn-green next-btn space-betwen-btn">
                                                @Resource.buttonValidate
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @if (Model.ListUser.ItemsCount > 0)
                            {
                                <div class="card card-form p-0">
                                    <div class="card-header card-header-form row">
                                        <h5 class="mb-0">
                                            <button class="btn btn-link btn-link-collapse" data-toggle="collapse"
                                                    data-target="#collapseStep2" aria-expanded="true" aria-controls="collapseSeven">
                                                <span class="fas fa-arrow-down"></span>
                                            </button>
                                            <div class="accordion-subtitle row">
                                                <div>@Resource.prf_userProfil</div>&nbsp;<div class="number-items" id="total-docGrid">@Model.ListUser.ItemsCount</div>
                                            </div>
                                        </h5>
                                    </div>
                                    <div id="collapseStep2" class="card-body show" aria-labelledby="Step">
                                        <div class="row ml-0 mr-0">
                                            <div class="col-6 pl-0">
                                            </div>
                                            <div class="col-6">
                                                <div class="text-right">
                                                    @Html.Partial("_PageSizes", Model.ListUser.Pager, new ViewDataDictionary { { "grid", "userGrid" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div id="parent_userGrid">
                                            @Html.Partial("_UserGrid", @Model.ListUser)
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/gridmvc")
    @Scripts.Render("~/bundles/gridmvc-custom-ajax")
    <script>
        function _showDocument(id) {
            return false;
        }
        function affecterDoc(docId, event) {
            //console.log("affecterDoc", docId);
            var grid = $("#docGrid");
            var objChk = $("input[name='DocsList'][value='" + docId + "']", grid);
            if (event.target.tagName == 'DIV') {
                var chkDD = objChk.is(":checked");
                objChk.prop("checked", !chkDD);
            }
            var chk = objChk.is(":checked");
            var docstate = $("#docState_" + docId).val();
            var oldCheck = (docstate === "True") ? true : false;
            if (oldCheck != chk ) {
                objChk.closest("tr").addClass("coched");
            }
            else {
                objChk.closest("tr").removeClass("coched");
            }
            $.ajax({
                url: '@Url.Action("AffectSession", "Profil")',
                data: { DocId: docId, OldCheckState: docstate, NewCheckState: chk },
                type: 'post',
                cache: false
            }).done(function (response) {
                });
            return false;
        }

        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
            $('#sidebar-entity-profil').addClass('active');
            $('#sidebar-profil').addClass('active');
            var grid1Name = "docGrid";
            //Infobulles
            if (window.pageGrids[grid1Name] != null) {
                window.pageGrids[grid1Name].addFilterWidget(new CategoriesFilterWidget());
                window.pageGrids[grid1Name].addFilterWidget(new SubCategoriesFilterWidget());
                window.pageGrids[grid1Name].ajaxify({
                    getData: '@Url.Action("AjaxDocumentGrid", "Profil")',
                    gridFilterForm: $('#ajaxDocumentForm')
                });
            }
            var grid2Name = "userGrid";
            //Infobulles
            if (window.pageGrids[grid2Name] != null) {
                window.pageGrids[grid2Name].ajaxify({
                    getData: '@Url.Action("AjaxUserGrid", "Profil")',
                    gridFilterForm: $('#ajaxDocumentForm')
                });
            }
            $('#newProfilForm').bootstrapValidator({
                excluded: [':disabled'],
                fields: {
                    Name: {
                        validators: {
                            notEmpty: {
                                message: "<span>@string.Format(@Resource.MessageRequiredField, Resource.prf_Name)</<span>"
                            },
                            remote: {
                                type: 'POST',
                                delay: 300,
                                message: "@Resource.prf_msg_UniqueName",
                                url: '@Url.Action("NameProfilExist", "Profil")',
                                data: {
                                    Id: $("#Id").val()
                                }
                            },
                            callback: {
                                callback: function (value, validator, $field) {
                                    // Determine the numbers which are generated in captchaOperation
                                    $field.removeClass('form-control-required');
                                    return true;
                                }
                            }
                        }
                    }
                }
            }).on('success.form.bv', function (e) {
                openLoading();
            });
        });
    </script>
}
@Html.Partial("_TemplateFiltre")