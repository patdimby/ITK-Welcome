@using GridMvc.Columns
@model GridMvc.IGrid
@if (Model == null) { return; }

@if (Model.RenderOptions.RenderRowsOnly)
{
    @RenderGridBody();
}
else
{
    <div class="grid-mvc" id="@Model.RenderOptions.GridName" data-lang="@Model.Language" data-gridname="@Model.RenderOptions.GridName" data-selectable="@Model.RenderOptions.Selectable.ToString().ToLower()" data-multiplefilters="@Model.RenderOptions.AllowMultipleFilters.ToString().ToLower()">
        <div class="grid-wrap table-responsive">
            <div class="essai">
                <table class="table table-striped grid-table">
                    @* Draw grid header *@
                    <thead>
                        @RenderGridHeader()
                    </thead>
                    <tbody>
                        @RenderGridBody()
                    </tbody>
                </table>
            </div>
        </div>
        @RenderGridFooter()
    </div>
}
@helper RenderGridBody()
{
    if (!Model.ItemsToDisplay.Any())
    {
        <tr class="grid-empty-text">
            <td colspan="@Model.Columns.Count()">
                @Model.EmptyGridText
            </td>
        </tr>
    }
    else
    {
        List<CategoryViewModel> categories = ((IEnumerable<DocumentViewModel>)Model.ItemsToDisplay).Where(x => x.ID_Category > 0).GroupBy(o => new { categoryId = o.ID_Category, categoryName = o.NameCategory, ordreCategory = o.OrdreCategory }).Select(m => new CategoryViewModel() { ID = m.Key.categoryId.Value, Name = m.Key.categoryName, OrdreCategory = m.Key.ordreCategory }).ToList();
        categories.Add(new CategoryViewModel() { ID = 0, Name = "Pas de catégorie" });
        foreach (CategoryViewModel category in categories)
        {
            List<DocumentViewModel> items = ((IEnumerable<DocumentViewModel>)Model.ItemsToDisplay).Where(x => x.ID_Category == category.ID).ToList();
            if (items.Any())
            {
                <tr class="grid-category">
                    <td>@category.Name</td>
                    <td colspan="5">&nbsp;</td>
                </tr>
                foreach (DocumentViewModel item in items)
                {
                    <tr class="grid-row @Model.GetRowCssClasses(item)">
                        @foreach (IGridColumn column in Model.Columns)
                        {
                            @column.CellRenderer.Render(column, column.GetCell(item))
                        }
                    </tr>
                }
            }

        }

    }
}
@helper RenderGridHeader()
{
    <tr>
        @foreach (IGridColumn column in Model.Columns)
        {
            @column.HeaderRenderer.Render(column)
        }
    </tr>
}
@helper RenderGridFooter()
{
    <div class="grid-footer">
        @if (Model.RenderOptions.ShowGridItemsCount)
        {
            <div class="grid-itemscount">
                <span class="grid-itemscount-label">@Model.RenderOptions.GridCountDisplayName</span>
                <span class="grid-itemscount-caption">@Model.ItemsCount</span>
            </div>
        }
        @if (Model.EnablePaging && Model.Pager != null)
        {
            @Html.Partial(Model.Pager.TemplateName, Model.Pager)
        }
    </div>
}
